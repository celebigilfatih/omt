{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///Users/celebigil/Dev/omt/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined\n}\n\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient()\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6IAAY;AAEhE,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///Users/celebigil/Dev/omt/src/app/api/applications/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport { z } from 'zod'\nimport { prisma } from '@/lib/prisma'\n\nconst applicationSchema = z.object({\n  teamName: z.string().min(1, 'Takım adı gereklidir'),\n  coachName: z.string().min(1, 'Antrenör adı gereklidir'),\n  phoneNumber: z.string().min(1, 'Telefon numarası gereklidir'),\n  website: z.string().optional(),\n  instagram: z.string().optional(),\n  twitter: z.string().optional(),\n  facebook: z.string().optional(),\n  stage: z.enum(['STAGE_1', 'STAGE_2']),\n  ageGroups: z.array(z.enum(['Y2012', 'Y2013', 'Y2014', 'Y2015', 'Y2016', 'Y2017', 'Y2018', 'Y2019', 'Y2020', 'Y2021', 'Y2022'])),\n  description: z.string().optional(),\n  logoUrl: z.string().optional(),\n})\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json()\n    const validatedData = applicationSchema.parse(body)\n\n    const application = await prisma.teamApplication.create({\n      data: validatedData,\n    })\n\n    return NextResponse.json(application, { status: 201 })\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { error: 'Geçersiz veri', details: error.issues },\n        { status: 400 }\n      )\n    }\n\n    console.error('Başvuru oluşturma hatası:', error)\n    return NextResponse.json(\n      { error: 'Başvuru oluşturulamadı' },\n      { status: 500 }\n    )\n  }\n}\n\nexport async function GET() {\n  try {\n    const applications = await prisma.teamApplication.findMany({\n      orderBy: { createdAt: \"desc\" },\n    });\n\n    return NextResponse.json(applications);\n  } catch (error) {\n    console.error(\"Error fetching applications:\", error);\n    return NextResponse.json(\n      { message: \"Başvurular getirilirken bir hata oluştu\" },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;;;;AAEA,MAAM,oBAAoB,oLAAC,CAAC,MAAM,CAAC;IACjC,UAAU,oLAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,WAAW,oLAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC7B,aAAa,oLAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC/B,SAAS,oLAAC,CAAC,MAAM,GAAG,QAAQ;IAC5B,WAAW,oLAAC,CAAC,MAAM,GAAG,QAAQ;IAC9B,SAAS,oLAAC,CAAC,MAAM,GAAG,QAAQ;IAC5B,UAAU,oLAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,OAAO,oLAAC,CAAC,IAAI,CAAC;QAAC;QAAW;KAAU;IACpC,WAAW,oLAAC,CAAC,KAAK,CAAC,oLAAC,CAAC,IAAI,CAAC;QAAC;QAAS;QAAS;QAAS;QAAS;QAAS;QAAS;QAAS;QAAS;QAAS;QAAS;KAAQ;IAC7H,aAAa,oLAAC,CAAC,MAAM,GAAG,QAAQ;IAChC,SAAS,oLAAC,CAAC,MAAM,GAAG,QAAQ;AAC9B;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,gBAAgB,kBAAkB,KAAK,CAAC;QAE9C,MAAM,cAAc,MAAM,gIAAM,CAAC,eAAe,CAAC,MAAM,CAAC;YACtD,MAAM;QACR;QAEA,OAAO,gJAAY,CAAC,IAAI,CAAC,aAAa;YAAE,QAAQ;QAAI;IACtD,EAAE,OAAO,OAAO;QACd,IAAI,iBAAiB,oLAAC,CAAC,QAAQ,EAAE;YAC/B,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;gBAAiB,SAAS,MAAM,MAAM;YAAC,GAChD;gBAAE,QAAQ;YAAI;QAElB;QAEA,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAyB,GAClC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,eAAe,MAAM,gIAAM,CAAC,eAAe,CAAC,QAAQ,CAAC;YACzD,SAAS;gBAAE,WAAW;YAAO;QAC/B;QAEA,OAAO,gJAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAA0C,GACrD;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}